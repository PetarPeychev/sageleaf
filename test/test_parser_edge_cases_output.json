{
  "span": {
    "file_path": "test/test_parser_edge_cases.sl",
    "start_line": 1,
    "start_column": 1,
    "end_line": 230,
    "end_column": 2
  },
  "statements": [
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 1,
        "start_column": 1,
        "end_line": 1,
        "end_column": 14
      },
      "type": "ImportStatement",
      "package": "system",
      "items": null,
      "alias": null
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 2,
        "start_column": 1,
        "end_line": 2,
        "end_column": 12
      },
      "type": "ImportStatement",
      "package": "math",
      "items": null,
      "alias": null
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 3,
        "start_column": 1,
        "end_line": 3,
        "end_column": 36
      },
      "type": "ImportStatement",
      "package": "geometry",
      "items": [
        "Vector",
        "Matrix"
      ],
      "alias": null
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 4,
        "start_column": 1,
        "end_line": 4,
        "end_column": 26
      },
      "type": "ImportStatement",
      "package": "collections",
      "items": null,
      "alias": "col"
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 6,
        "start_column": 1,
        "end_line": 6,
        "end_column": 134
      },
      "type": "NativeBlock",
      "content": "\n    #include <math.h>\n    #include <complex.h>\n    \n    typedef struct {\n        double real;\n        double imag;\n    } complex_t;\n"
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 16,
        "start_column": 1,
        "end_line": 19,
        "end_column": 2
      },
      "type": "StructDef",
      "name": "ComplexNumber",
      "type_params": [],
      "fields": [
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 17,
            "start_column": 5,
            "end_line": 17,
            "end_column": 14
          },
          "type": "StructField",
          "name": "real",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 17,
              "start_column": 11,
              "end_line": 17,
              "end_column": 14
            },
            "type": "F64"
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 18,
            "start_column": 5,
            "end_line": 18,
            "end_column": 14
          },
          "type": "StructField",
          "name": "imag",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 18,
              "start_column": 11,
              "end_line": 18,
              "end_column": 14
            },
            "type": "F64"
          }
        }
      ]
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 21,
        "start_column": 1,
        "end_line": 25,
        "end_column": 2
      },
      "type": "StructDef",
      "name": "Matrix",
      "type_params": [
        "T"
      ],
      "fields": [
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 22,
            "start_column": 5,
            "end_line": 22,
            "end_column": 23
          },
          "type": "StructField",
          "name": "data",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 22,
              "start_column": 11,
              "end_line": 22,
              "end_column": 23
            },
            "type": "CustomType",
            "name": "List",
            "type_args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 22,
                  "start_column": 17,
                  "end_line": 22,
                  "end_column": 23
                },
                "type": "CustomType",
                "name": "List",
                "type_args": [
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 22,
                      "start_column": 22,
                      "end_line": 22,
                      "end_column": 23
                    },
                    "type": "CustomType",
                    "name": "T",
                    "type_args": []
                  }
                ]
              }
            ]
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 23,
            "start_column": 5,
            "end_line": 23,
            "end_column": 16
          },
          "type": "StructField",
          "name": "rows",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 23,
              "start_column": 11,
              "end_line": 23,
              "end_column": 16
            },
            "type": "Usize"
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 24,
            "start_column": 5,
            "end_line": 24,
            "end_column": 16
          },
          "type": "StructField",
          "name": "cols",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 24,
              "start_column": 11,
              "end_line": 24,
              "end_column": 16
            },
            "type": "Usize"
          }
        }
      ]
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 27,
        "start_column": 1,
        "end_line": 30,
        "end_column": 2
      },
      "type": "UnionDef",
      "name": "ParseResult",
      "type_params": [
        "T"
      ],
      "variants": [
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 28,
            "start_column": 5,
            "end_line": 28,
            "end_column": 49
          },
          "type": "UnionVariant",
          "name": "success",
          "payload": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 28,
              "start_column": 14,
              "end_line": 28,
              "end_column": 49
            },
            "type": "AnonymousStructType",
            "fields": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 28,
                  "start_column": 23,
                  "end_line": 28,
                  "end_column": 31
                },
                "type": "StructField",
                "name": "value",
                "type_annotation": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 28,
                    "start_column": 30,
                    "end_line": 28,
                    "end_column": 31
                  },
                  "type": "CustomType",
                  "name": "T",
                  "type_args": []
                }
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 28,
                  "start_column": 33,
                  "end_line": 28,
                  "end_column": 47
                },
                "type": "StructField",
                "name": "remaining",
                "type_annotation": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 28,
                    "start_column": 44,
                    "end_line": 28,
                    "end_column": 47
                  },
                  "type": "Str"
                }
              }
            ]
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 29,
            "start_column": 5,
            "end_line": 29,
            "end_column": 52
          },
          "type": "UnionVariant",
          "name": "error",
          "payload": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 29,
              "start_column": 12,
              "end_line": 29,
              "end_column": 52
            },
            "type": "AnonymousStructType",
            "fields": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 29,
                  "start_column": 21,
                  "end_line": 29,
                  "end_column": 33
                },
                "type": "StructField",
                "name": "message",
                "type_annotation": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 29,
                    "start_column": 30,
                    "end_line": 29,
                    "end_column": 33
                  },
                  "type": "Str"
                }
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 29,
                  "start_column": 35,
                  "end_line": 29,
                  "end_column": 50
                },
                "type": "StructField",
                "name": "position",
                "type_annotation": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 29,
                    "start_column": 45,
                    "end_line": 29,
                    "end_column": 50
                  },
                  "type": "Usize"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 32,
        "start_column": 1,
        "end_line": 35,
        "end_column": 2
      },
      "type": "UnionDef",
      "name": "Either",
      "type_params": [
        "L",
        "R"
      ],
      "variants": [
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 33,
            "start_column": 5,
            "end_line": 33,
            "end_column": 12
          },
          "type": "UnionVariant",
          "name": "left",
          "payload": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 33,
              "start_column": 11,
              "end_line": 33,
              "end_column": 12
            },
            "type": "CustomType",
            "name": "L",
            "type_args": []
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 34,
            "start_column": 5,
            "end_line": 34,
            "end_column": 13
          },
          "type": "UnionVariant",
          "name": "right",
          "payload": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 34,
              "start_column": 12,
              "end_line": 34,
              "end_column": 13
            },
            "type": "CustomType",
            "name": "R",
            "type_args": []
          }
        }
      ]
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 37,
        "start_column": 1,
        "end_line": 37,
        "end_column": 27
      },
      "type": "ConstDeclaration",
      "name": "EPSILON",
      "type_annotation": {
        "span": {
          "file_path": "test/test_parser_edge_cases.sl",
          "start_line": 37,
          "start_column": 16,
          "end_line": 37,
          "end_column": 19
        },
        "type": "F64"
      },
      "value": {
        "span": {
          "file_path": "test/test_parser_edge_cases.sl",
          "start_line": 37,
          "start_column": 22,
          "end_line": 37,
          "end_column": 27
        },
        "type": "FloatLiteral",
        "value": "1e-10"
      }
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 38,
        "start_column": 1,
        "end_line": 38,
        "end_column": 33
      },
      "type": "ConstDeclaration",
      "name": "MAX_ITERATIONS",
      "type_annotation": {
        "span": {
          "file_path": "test/test_parser_edge_cases.sl",
          "start_line": 38,
          "start_column": 23,
          "end_line": 38,
          "end_column": 26
        },
        "type": "U32"
      },
      "value": {
        "span": {
          "file_path": "test/test_parser_edge_cases.sl",
          "start_line": 38,
          "start_column": 29,
          "end_line": 38,
          "end_column": 33
        },
        "type": "IntLiteral",
        "value": "1000"
      }
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 40,
        "start_column": 1,
        "end_line": 54,
        "end_column": 2
      },
      "type": "FunctionDef",
      "name": "test_complex_expressions",
      "params": [],
      "return_type": null,
      "body": [
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 41,
            "start_column": 5,
            "end_line": 41,
            "end_column": 16
          },
          "type": "VarDeclaration",
          "name": "a",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 41,
              "start_column": 8,
              "end_line": 41,
              "end_column": 11
            },
            "type": "I32"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 41,
              "start_column": 14,
              "end_line": 41,
              "end_column": 16
            },
            "type": "IntLiteral",
            "value": "42"
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 42,
            "start_column": 5,
            "end_line": 42,
            "end_column": 21
          },
          "type": "VarDeclaration",
          "name": "b",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 42,
              "start_column": 8,
              "end_line": 42,
              "end_column": 11
            },
            "type": "F64"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 42,
              "start_column": 14,
              "end_line": 42,
              "end_column": 21
            },
            "type": "FloatLiteral",
            "value": "3.14159"
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 43,
            "start_column": 5,
            "end_line": 43,
            "end_column": 19
          },
          "type": "VarDeclaration",
          "name": "c",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 43,
              "start_column": 8,
              "end_line": 43,
              "end_column": 12
            },
            "type": "Bool"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 43,
              "start_column": 15,
              "end_line": 43,
              "end_column": 19
            },
            "type": "BoolLiteral",
            "value": true
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 45,
            "start_column": 5,
            "end_line": 45,
            "end_column": 53
          },
          "type": "VarDeclaration",
          "name": "result1",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 45,
              "start_column": 14,
              "end_line": 45,
              "end_column": 17
            },
            "type": "I32"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 45,
              "start_column": 21,
              "end_line": 45,
              "end_column": 53
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 45,
                "start_column": 21,
                "end_line": 45,
                "end_column": 37
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 45,
                  "start_column": 21,
                  "end_line": 45,
                  "end_column": 27
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 45,
                    "start_column": 21,
                    "end_line": 45,
                    "end_column": 22
                  },
                  "type": "Identifier",
                  "name": "a"
                },
                "operator": "+",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 45,
                    "start_column": 25,
                    "end_line": 45,
                    "end_column": 27
                  },
                  "type": "IntLiteral",
                  "value": "10"
                }
              },
              "operator": "*",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 45,
                  "start_column": 32,
                  "end_line": 45,
                  "end_column": 37
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 45,
                    "start_column": 32,
                    "end_line": 45,
                    "end_column": 33
                  },
                  "type": "Identifier",
                  "name": "a"
                },
                "operator": "-",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 45,
                    "start_column": 36,
                    "end_line": 45,
                    "end_column": 37
                  },
                  "type": "IntLiteral",
                  "value": "5"
                }
              }
            },
            "operator": "/",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 45,
                "start_column": 43,
                "end_line": 45,
                "end_column": 53
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 45,
                  "start_column": 43,
                  "end_line": 45,
                  "end_column": 48
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 45,
                    "start_column": 43,
                    "end_line": 45,
                    "end_column": 44
                  },
                  "type": "Identifier",
                  "name": "a"
                },
                "operator": "%",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 45,
                    "start_column": 47,
                    "end_line": 45,
                    "end_column": 48
                  },
                  "type": "IntLiteral",
                  "value": "3"
                }
              },
              "operator": "+",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 45,
                  "start_column": 52,
                  "end_line": 45,
                  "end_column": 53
                },
                "type": "IntLiteral",
                "value": "1"
              }
            }
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 46,
            "start_column": 5,
            "end_line": 46,
            "end_column": 61
          },
          "type": "VarDeclaration",
          "name": "result2",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 46,
              "start_column": 14,
              "end_line": 46,
              "end_column": 17
            },
            "type": "F64"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 46,
              "start_column": 22,
              "end_line": 46,
              "end_column": 61
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 46,
                "start_column": 22,
                "end_line": 46,
                "end_column": 36
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 46,
                  "start_column": 22,
                  "end_line": 46,
                  "end_column": 29
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 46,
                    "start_column": 22,
                    "end_line": 46,
                    "end_column": 23
                  },
                  "type": "Identifier",
                  "name": "b"
                },
                "operator": "*",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 46,
                    "start_column": 26,
                    "end_line": 46,
                    "end_column": 29
                  },
                  "type": "FloatLiteral",
                  "value": "2.0"
                }
              },
              "operator": "+",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 46,
                  "start_column": 33,
                  "end_line": 46,
                  "end_column": 36
                },
                "type": "FloatLiteral",
                "value": "1.0"
              }
            },
            "operator": "/",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 46,
                "start_column": 42,
                "end_line": 46,
                "end_column": 61
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 46,
                  "start_column": 42,
                  "end_line": 46,
                  "end_column": 49
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 46,
                    "start_column": 42,
                    "end_line": 46,
                    "end_column": 43
                  },
                  "type": "Identifier",
                  "name": "b"
                },
                "operator": "-",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 46,
                    "start_column": 46,
                    "end_line": 46,
                    "end_column": 49
                  },
                  "type": "FloatLiteral",
                  "value": "1.0"
                }
              },
              "operator": "*",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 46,
                  "start_column": 54,
                  "end_line": 46,
                  "end_column": 61
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 46,
                    "start_column": 54,
                    "end_line": 46,
                    "end_column": 55
                  },
                  "type": "Identifier",
                  "name": "b"
                },
                "operator": "+",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 46,
                    "start_column": 58,
                    "end_line": 46,
                    "end_column": 61
                  },
                  "type": "FloatLiteral",
                  "value": "1.0"
                }
              }
            }
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 47,
            "start_column": 5,
            "end_line": 47,
            "end_column": 68
          },
          "type": "VarDeclaration",
          "name": "result3",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 47,
              "start_column": 14,
              "end_line": 47,
              "end_column": 18
            },
            "type": "Bool"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 47,
              "start_column": 23,
              "end_line": 47,
              "end_column": 68
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 47,
                "start_column": 23,
                "end_line": 47,
                "end_column": 43
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 47,
                  "start_column": 23,
                  "end_line": 47,
                  "end_column": 29
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 47,
                    "start_column": 23,
                    "end_line": 47,
                    "end_column": 24
                  },
                  "type": "Identifier",
                  "name": "a"
                },
                "operator": ">",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 47,
                    "start_column": 27,
                    "end_line": 47,
                    "end_column": 29
                  },
                  "type": "IntLiteral",
                  "value": "10"
                }
              },
              "operator": "and",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 47,
                  "start_column": 36,
                  "end_line": 47,
                  "end_column": 43
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 47,
                    "start_column": 36,
                    "end_line": 47,
                    "end_column": 37
                  },
                  "type": "Identifier",
                  "name": "b"
                },
                "operator": "<",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 47,
                    "start_column": 40,
                    "end_line": 47,
                    "end_column": 43
                  },
                  "type": "FloatLiteral",
                  "value": "5.0"
                }
              }
            },
            "operator": "or",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 47,
                "start_column": 50,
                "end_line": 47,
                "end_column": 68
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 47,
                  "start_column": 50,
                  "end_line": 47,
                  "end_column": 55
                },
                "type": "UnaryOp",
                "operator": "not",
                "operand": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 47,
                    "start_column": 54,
                    "end_line": 47,
                    "end_column": 55
                  },
                  "type": "Identifier",
                  "name": "c"
                }
              },
              "operator": "and",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 47,
                  "start_column": 61,
                  "end_line": 47,
                  "end_column": 68
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 47,
                    "start_column": 61,
                    "end_line": 47,
                    "end_column": 62
                  },
                  "type": "Identifier",
                  "name": "a"
                },
                "operator": "==",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 47,
                    "start_column": 66,
                    "end_line": 47,
                    "end_column": 68
                  },
                  "type": "IntLiteral",
                  "value": "42"
                }
              }
            }
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 49,
            "start_column": 5,
            "end_line": 49,
            "end_column": 68
          },
          "type": "VarDeclaration",
          "name": "complex_expr",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 49,
              "start_column": 19,
              "end_line": 49,
              "end_column": 22
            },
            "type": "I32"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 49,
              "start_column": 28,
              "end_line": 49,
              "end_column": 68
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 49,
                "start_column": 28,
                "end_line": 49,
                "end_column": 59
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 49,
                  "start_column": 28,
                  "end_line": 49,
                  "end_column": 38
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 49,
                    "start_column": 28,
                    "end_line": 49,
                    "end_column": 33
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 49,
                      "start_column": 28,
                      "end_line": 49,
                      "end_column": 29
                    },
                    "type": "Identifier",
                    "name": "a"
                  },
                  "operator": "+",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 49,
                      "start_column": 32,
                      "end_line": 49,
                      "end_column": 33
                    },
                    "type": "IntLiteral",
                    "value": "5"
                  }
                },
                "operator": "*",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 49,
                    "start_column": 37,
                    "end_line": 49,
                    "end_column": 38
                  },
                  "type": "IntLiteral",
                  "value": "3"
                }
              },
              "operator": "-",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 49,
                  "start_column": 44,
                  "end_line": 49,
                  "end_column": 59
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 49,
                    "start_column": 44,
                    "end_line": 49,
                    "end_column": 49
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 49,
                      "start_column": 44,
                      "end_line": 49,
                      "end_column": 45
                    },
                    "type": "Identifier",
                    "name": "a"
                  },
                  "operator": "*",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 49,
                      "start_column": 48,
                      "end_line": 49,
                      "end_column": 49
                    },
                    "type": "IntLiteral",
                    "value": "2"
                  }
                },
                "operator": "+",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 49,
                    "start_column": 54,
                    "end_line": 49,
                    "end_column": 59
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 49,
                      "start_column": 54,
                      "end_line": 49,
                      "end_column": 55
                    },
                    "type": "IntLiteral",
                    "value": "5"
                  },
                  "operator": "/",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 49,
                      "start_column": 58,
                      "end_line": 49,
                      "end_column": 59
                    },
                    "type": "IntLiteral",
                    "value": "2"
                  }
                }
              }
            },
            "operator": "%",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 49,
                "start_column": 65,
                "end_line": 49,
                "end_column": 68
              },
              "type": "IntLiteral",
              "value": "100"
            }
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 51,
            "start_column": 5,
            "end_line": 51,
            "end_column": 36
          },
          "type": "VarDeclaration",
          "name": "simple_conditional",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 51,
              "start_column": 25,
              "end_line": 51,
              "end_column": 28
            },
            "type": "I32"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 51,
              "start_column": 31,
              "end_line": 51,
              "end_column": 36
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 51,
                "start_column": 31,
                "end_line": 51,
                "end_column": 32
              },
              "type": "Identifier",
              "name": "a"
            },
            "operator": "*",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 51,
                "start_column": 35,
                "end_line": 51,
                "end_column": 36
              },
              "type": "IntLiteral",
              "value": "2"
            }
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 53,
            "start_column": 5,
            "end_line": 53,
            "end_column": 74
          },
          "type": "VarDeclaration",
          "name": "deeply_nested",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 53,
              "start_column": 20,
              "end_line": 53,
              "end_column": 23
            },
            "type": "I32"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 53,
              "start_column": 30,
              "end_line": 53,
              "end_column": 74
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 53,
                "start_column": 30,
                "end_line": 53,
                "end_column": 56
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 53,
                  "start_column": 30,
                  "end_line": 53,
                  "end_column": 40
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 53,
                    "start_column": 30,
                    "end_line": 53,
                    "end_column": 35
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 53,
                      "start_column": 30,
                      "end_line": 53,
                      "end_column": 31
                    },
                    "type": "Identifier",
                    "name": "a"
                  },
                  "operator": "+",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 53,
                      "start_column": 34,
                      "end_line": 53,
                      "end_column": 35
                    },
                    "type": "IntLiteral",
                    "value": "1"
                  }
                },
                "operator": "*",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 53,
                    "start_column": 39,
                    "end_line": 53,
                    "end_column": 40
                  },
                  "type": "IntLiteral",
                  "value": "2"
                }
              },
              "operator": "-",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 53,
                  "start_column": 46,
                  "end_line": 53,
                  "end_column": 56
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 53,
                    "start_column": 46,
                    "end_line": 53,
                    "end_column": 51
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 53,
                      "start_column": 46,
                      "end_line": 53,
                      "end_column": 47
                    },
                    "type": "IntLiteral",
                    "value": "5"
                  },
                  "operator": "-",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 53,
                      "start_column": 50,
                      "end_line": 53,
                      "end_column": 51
                    },
                    "type": "IntLiteral",
                    "value": "5"
                  }
                },
                "operator": "/",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 53,
                    "start_column": 55,
                    "end_line": 53,
                    "end_column": 56
                  },
                  "type": "IntLiteral",
                  "value": "2"
                }
              }
            },
            "operator": "+",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 53,
                "start_column": 64,
                "end_line": 53,
                "end_column": 74
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 53,
                  "start_column": 64,
                  "end_line": 53,
                  "end_column": 69
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 53,
                    "start_column": 64,
                    "end_line": 53,
                    "end_column": 65
                  },
                  "type": "Identifier",
                  "name": "a"
                },
                "operator": "%",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 53,
                    "start_column": 68,
                    "end_line": 53,
                    "end_column": 69
                  },
                  "type": "IntLiteral",
                  "value": "3"
                }
              },
              "operator": "*",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 53,
                  "start_column": 73,
                  "end_line": 53,
                  "end_column": 74
                },
                "type": "IntLiteral",
                "value": "4"
              }
            }
          }
        }
      ]
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 56,
        "start_column": 1,
        "end_line": 75,
        "end_column": 2
      },
      "type": "FunctionDef",
      "name": "test_edge_case_literals",
      "params": [],
      "return_type": null,
      "body": [
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 57,
            "start_column": 5,
            "end_line": 57,
            "end_column": 59
          },
          "type": "VarDeclaration",
          "name": "hex_nums",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 57,
              "start_column": 15,
              "end_line": 57,
              "end_column": 23
            },
            "type": "CustomType",
            "name": "List",
            "type_args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 57,
                  "start_column": 20,
                  "end_line": 57,
                  "end_column": 23
                },
                "type": "U32"
              }
            ]
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 57,
              "start_column": 26,
              "end_line": 57,
              "end_column": 59
            },
            "type": "ListLiteral",
            "elements": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 57,
                  "start_column": 27,
                  "end_line": 57,
                  "end_column": 30
                },
                "type": "IntLiteral",
                "value": "0x0"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 57,
                  "start_column": 32,
                  "end_line": 57,
                  "end_column": 36
                },
                "type": "IntLiteral",
                "value": "0xFF"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 57,
                  "start_column": 38,
                  "end_line": 57,
                  "end_column": 48
                },
                "type": "IntLiteral",
                "value": "0xDEADBEEF"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 57,
                  "start_column": 50,
                  "end_line": 57,
                  "end_column": 58
                },
                "type": "IntLiteral",
                "value": "0xABC123"
              }
            ]
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 58,
            "start_column": 5,
            "end_line": 58,
            "end_column": 59
          },
          "type": "VarDeclaration",
          "name": "bin_nums",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 58,
              "start_column": 15,
              "end_line": 58,
              "end_column": 22
            },
            "type": "CustomType",
            "name": "List",
            "type_args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 58,
                  "start_column": 20,
                  "end_line": 58,
                  "end_column": 22
                },
                "type": "U8"
              }
            ]
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 58,
              "start_column": 25,
              "end_line": 58,
              "end_column": 59
            },
            "type": "ListLiteral",
            "elements": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 58,
                  "start_column": 26,
                  "end_line": 58,
                  "end_column": 29
                },
                "type": "IntLiteral",
                "value": "0b0"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 58,
                  "start_column": 31,
                  "end_line": 58,
                  "end_column": 34
                },
                "type": "IntLiteral",
                "value": "0b1"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 58,
                  "start_column": 36,
                  "end_line": 58,
                  "end_column": 46
                },
                "type": "IntLiteral",
                "value": "0b11111111"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 58,
                  "start_column": 48,
                  "end_line": 58,
                  "end_column": 58
                },
                "type": "IntLiteral",
                "value": "0b10101010"
              }
            ]
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 59,
            "start_column": 5,
            "end_line": 59,
            "end_column": 43
          },
          "type": "VarDeclaration",
          "name": "oct_nums",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 59,
              "start_column": 15,
              "end_line": 59,
              "end_column": 23
            },
            "type": "CustomType",
            "name": "List",
            "type_args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 59,
                  "start_column": 20,
                  "end_line": 59,
                  "end_column": 23
                },
                "type": "U16"
              }
            ]
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 59,
              "start_column": 26,
              "end_line": 59,
              "end_column": 43
            },
            "type": "ListLiteral",
            "elements": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 59,
                  "start_column": 27,
                  "end_line": 59,
                  "end_column": 30
                },
                "type": "IntLiteral",
                "value": "0o0"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 59,
                  "start_column": 32,
                  "end_line": 59,
                  "end_column": 35
                },
                "type": "IntLiteral",
                "value": "0o7"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 59,
                  "start_column": 37,
                  "end_line": 59,
                  "end_column": 42
                },
                "type": "IntLiteral",
                "value": "0o777"
              }
            ]
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 61,
            "start_column": 5,
            "end_line": 65,
            "end_column": 6
          },
          "type": "VarDeclaration",
          "name": "floats",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 61,
              "start_column": 13,
              "end_line": 61,
              "end_column": 21
            },
            "type": "CustomType",
            "name": "List",
            "type_args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 61,
                  "start_column": 18,
                  "end_line": 61,
                  "end_column": 21
                },
                "type": "F64"
              }
            ]
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 61,
              "start_column": 24,
              "end_line": 65,
              "end_column": 6
            },
            "type": "ListLiteral",
            "elements": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 62,
                  "start_column": 9,
                  "end_line": 62,
                  "end_column": 12
                },
                "type": "FloatLiteral",
                "value": "0.0"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 62,
                  "start_column": 14,
                  "end_line": 62,
                  "end_column": 17
                },
                "type": "FloatLiteral",
                "value": "1.0"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 62,
                  "start_column": 19,
                  "end_line": 62,
                  "end_column": 23
                },
                "type": "UnaryOp",
                "operator": "-",
                "operand": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 62,
                    "start_column": 20,
                    "end_line": 62,
                    "end_column": 23
                  },
                  "type": "FloatLiteral",
                  "value": "1.0"
                }
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 63,
                  "start_column": 9,
                  "end_line": 63,
                  "end_column": 16
                },
                "type": "FloatLiteral",
                "value": "1.23e10"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 63,
                  "start_column": 18,
                  "end_line": 63,
                  "end_column": 27
                },
                "type": "UnaryOp",
                "operator": "-",
                "operand": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 63,
                    "start_column": 19,
                    "end_line": 63,
                    "end_column": 27
                  },
                  "type": "FloatLiteral",
                  "value": "4.56e-20"
                }
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 64,
                  "start_column": 9,
                  "end_line": 64,
                  "end_column": 12
                },
                "type": "FloatLiteral",
                "value": "0.5"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 64,
                  "start_column": 14,
                  "end_line": 64,
                  "end_column": 17
                },
                "type": "FloatLiteral",
                "value": "1.0"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 64,
                  "start_column": 19,
                  "end_line": 64,
                  "end_column": 22
                },
                "type": "FloatLiteral",
                "value": "2.5"
              }
            ]
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 67,
            "start_column": 5,
            "end_line": 72,
            "end_column": 6
          },
          "type": "VarDeclaration",
          "name": "strings",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 67,
              "start_column": 14,
              "end_line": 67,
              "end_column": 22
            },
            "type": "CustomType",
            "name": "List",
            "type_args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 67,
                  "start_column": 19,
                  "end_line": 67,
                  "end_column": 22
                },
                "type": "Str"
              }
            ]
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 67,
              "start_column": 25,
              "end_line": 72,
              "end_column": 6
            },
            "type": "ListLiteral",
            "elements": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 68,
                  "start_column": 9,
                  "end_line": 68,
                  "end_column": 9
                },
                "type": "StringLiteral",
                "value": ""
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 69,
                  "start_column": 9,
                  "end_line": 69,
                  "end_column": 15
                },
                "type": "StringLiteral",
                "value": "simple"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 70,
                  "start_column": 9,
                  "end_line": 70,
                  "end_column": 31
                },
                "type": "StringLiteral",
                "value": "with newlines and tabs"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 71,
                  "start_column": 9,
                  "end_line": 71,
                  "end_column": 44
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 71,
                    "start_column": 9,
                    "end_line": 71,
                    "end_column": 34
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 71,
                      "start_column": 9,
                      "end_line": 71,
                      "end_column": 22
                    },
                    "type": "StringLiteral",
                    "value": "concatenated "
                  },
                  "operator": "+",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 71,
                      "start_column": 27,
                      "end_line": 71,
                      "end_column": 34
                    },
                    "type": "StringLiteral",
                    "value": "string "
                  }
                },
                "operator": "+",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 71,
                    "start_column": 39,
                    "end_line": 71,
                    "end_column": 44
                  },
                  "type": "StringLiteral",
                  "value": "parts"
                }
              }
            ]
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 74,
            "start_column": 5,
            "end_line": 74,
            "end_column": 49
          },
          "type": "VarDeclaration",
          "name": "chars",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 74,
              "start_column": 12,
              "end_line": 74,
              "end_column": 21
            },
            "type": "CustomType",
            "name": "List",
            "type_args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 74,
                  "start_column": 17,
                  "end_line": 74,
                  "end_column": 21
                },
                "type": "CustomType",
                "name": "char",
                "type_args": []
              }
            ]
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 74,
              "start_column": 24,
              "end_line": 74,
              "end_column": 49
            },
            "type": "ListLiteral",
            "elements": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 74,
                  "start_column": 25,
                  "end_line": 74,
                  "end_column": 26
                },
                "type": "StringLiteral",
                "value": "a"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 74,
                  "start_column": 30,
                  "end_line": 74,
                  "end_column": 31
                },
                "type": "StringLiteral",
                "value": "b"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 74,
                  "start_column": 35,
                  "end_line": 74,
                  "end_column": 36
                },
                "type": "StringLiteral",
                "value": "c"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 74,
                  "start_column": 40,
                  "end_line": 74,
                  "end_column": 41
                },
                "type": "StringLiteral",
                "value": "d"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 74,
                  "start_column": 45,
                  "end_line": 74,
                  "end_column": 46
                },
                "type": "StringLiteral",
                "value": "e"
              }
            ]
          }
        }
      ]
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 77,
        "start_column": 1,
        "end_line": 120,
        "end_column": 2
      },
      "type": "FunctionDef",
      "name": "test_complex_control_flow",
      "params": [],
      "return_type": null,
      "body": [
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 78,
            "start_column": 5,
            "end_line": 78,
            "end_column": 53
          },
          "type": "VarDeclaration",
          "name": "data",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 78,
              "start_column": 11,
              "end_line": 78,
              "end_column": 19
            },
            "type": "CustomType",
            "name": "List",
            "type_args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 78,
                  "start_column": 16,
                  "end_line": 78,
                  "end_column": 19
                },
                "type": "I32"
              }
            ]
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 78,
              "start_column": 22,
              "end_line": 78,
              "end_column": 53
            },
            "type": "ListLiteral",
            "elements": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 78,
                  "start_column": 23,
                  "end_line": 78,
                  "end_column": 24
                },
                "type": "IntLiteral",
                "value": "1"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 78,
                  "start_column": 26,
                  "end_line": 78,
                  "end_column": 27
                },
                "type": "IntLiteral",
                "value": "2"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 78,
                  "start_column": 29,
                  "end_line": 78,
                  "end_column": 30
                },
                "type": "IntLiteral",
                "value": "3"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 78,
                  "start_column": 32,
                  "end_line": 78,
                  "end_column": 33
                },
                "type": "IntLiteral",
                "value": "4"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 78,
                  "start_column": 35,
                  "end_line": 78,
                  "end_column": 36
                },
                "type": "IntLiteral",
                "value": "5"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 78,
                  "start_column": 38,
                  "end_line": 78,
                  "end_column": 39
                },
                "type": "IntLiteral",
                "value": "6"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 78,
                  "start_column": 41,
                  "end_line": 78,
                  "end_column": 42
                },
                "type": "IntLiteral",
                "value": "7"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 78,
                  "start_column": 44,
                  "end_line": 78,
                  "end_column": 45
                },
                "type": "IntLiteral",
                "value": "8"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 78,
                  "start_column": 47,
                  "end_line": 78,
                  "end_column": 48
                },
                "type": "IntLiteral",
                "value": "9"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 78,
                  "start_column": 50,
                  "end_line": 78,
                  "end_column": 52
                },
                "type": "IntLiteral",
                "value": "10"
              }
            ]
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 80,
            "start_column": 5,
            "end_line": 92,
            "end_column": 6
          },
          "type": "ForStatement",
          "target": [
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 80,
                "start_column": 9,
                "end_line": 80,
                "end_column": 14
              },
              "type": "Identifier",
              "name": "value"
            }
          ],
          "iterable": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 80,
              "start_column": 18,
              "end_line": 80,
              "end_column": 22
            },
            "type": "Identifier",
            "name": "data"
          },
          "body": [
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 81,
                "start_column": 9,
                "end_line": 90,
                "end_column": 14
              },
              "type": "IfStatement",
              "condition": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 81,
                  "start_column": 13,
                  "end_line": 81,
                  "end_column": 43
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 81,
                    "start_column": 13,
                    "end_line": 81,
                    "end_column": 27
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 81,
                      "start_column": 13,
                      "end_line": 81,
                      "end_column": 22
                    },
                    "type": "BinaryOp",
                    "left": {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 81,
                        "start_column": 13,
                        "end_line": 81,
                        "end_column": 18
                      },
                      "type": "Identifier",
                      "name": "value"
                    },
                    "operator": "%",
                    "right": {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 81,
                        "start_column": 21,
                        "end_line": 81,
                        "end_column": 22
                      },
                      "type": "IntLiteral",
                      "value": "2"
                    }
                  },
                  "operator": "==",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 81,
                      "start_column": 26,
                      "end_line": 81,
                      "end_column": 27
                    },
                    "type": "IntLiteral",
                    "value": "0"
                  }
                },
                "operator": "and",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 81,
                    "start_column": 34,
                    "end_line": 81,
                    "end_column": 43
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 81,
                      "start_column": 34,
                      "end_line": 81,
                      "end_column": 39
                    },
                    "type": "Identifier",
                    "name": "value"
                  },
                  "operator": ">",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 81,
                      "start_column": 42,
                      "end_line": 81,
                      "end_column": 43
                    },
                    "type": "IntLiteral",
                    "value": "4"
                  }
                }
              },
              "then_body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 82,
                    "start_column": 13,
                    "end_line": 90,
                    "end_column": 14
                  },
                  "type": "IfStatement",
                  "condition": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 82,
                      "start_column": 16,
                      "end_line": 82,
                      "end_column": 26
                    },
                    "type": "BinaryOp",
                    "left": {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 82,
                        "start_column": 16,
                        "end_line": 82,
                        "end_column": 21
                      },
                      "type": "Identifier",
                      "name": "value"
                    },
                    "operator": "==",
                    "right": {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 82,
                        "start_column": 25,
                        "end_line": 82,
                        "end_column": 26
                      },
                      "type": "IntLiteral",
                      "value": "6"
                    }
                  },
                  "then_body": [
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 83,
                        "start_column": 17,
                        "end_line": 83,
                        "end_column": 25
                      },
                      "type": "ContinueStatement"
                    }
                  ],
                  "elif_branches": [
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 84,
                        "start_column": 15,
                        "end_line": 86,
                        "end_column": 14
                      },
                      "type": "ElifBranch",
                      "condition": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 84,
                          "start_column": 20,
                          "end_line": 84,
                          "end_column": 30
                        },
                        "type": "BinaryOp",
                        "left": {
                          "span": {
                            "file_path": "test/test_parser_edge_cases.sl",
                            "start_line": 84,
                            "start_column": 20,
                            "end_line": 84,
                            "end_column": 25
                          },
                          "type": "Identifier",
                          "name": "value"
                        },
                        "operator": "==",
                        "right": {
                          "span": {
                            "file_path": "test/test_parser_edge_cases.sl",
                            "start_line": 84,
                            "start_column": 29,
                            "end_line": 84,
                            "end_column": 30
                          },
                          "type": "IntLiteral",
                          "value": "8"
                        }
                      },
                      "body": [
                        {
                          "span": {
                            "file_path": "test/test_parser_edge_cases.sl",
                            "start_line": 85,
                            "start_column": 17,
                            "end_line": 85,
                            "end_column": 22
                          },
                          "type": "BreakStatement"
                        }
                      ]
                    }
                  ],
                  "else_body": [
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 87,
                        "start_column": 17,
                        "end_line": 87,
                        "end_column": 93
                      },
                      "type": "NativeBlock",
                      "content": "\n                    printf(\"Even value > 4: %d\\n\", value);\n                "
                    }
                  ]
                }
              ],
              "elif_branches": [],
              "else_body": null
            }
          ]
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 94,
            "start_column": 5,
            "end_line": 102,
            "end_column": 6
          },
          "type": "ForStatement",
          "target": [
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 94,
                "start_column": 9,
                "end_line": 94,
                "end_column": 10
              },
              "type": "Identifier",
              "name": "i"
            }
          ],
          "iterable": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 94,
              "start_column": 14,
              "end_line": 94,
              "end_column": 20
            },
            "type": "RangeExpression",
            "start": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 94,
                "start_column": 14,
                "end_line": 94,
                "end_column": 15
              },
              "type": "IntLiteral",
              "value": "0"
            },
            "end": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 94,
                "start_column": 18,
                "end_line": 94,
                "end_column": 20
              },
              "type": "IntLiteral",
              "value": "10"
            },
            "inclusive": false
          },
          "body": [
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 95,
                "start_column": 9,
                "end_line": 101,
                "end_column": 10
              },
              "type": "ForStatement",
              "target": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 95,
                    "start_column": 13,
                    "end_line": 95,
                    "end_column": 14
                  },
                  "type": "Identifier",
                  "name": "j"
                }
              ],
              "iterable": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 95,
                  "start_column": 18,
                  "end_line": 95,
                  "end_column": 23
                },
                "type": "RangeExpression",
                "start": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 95,
                    "start_column": 18,
                    "end_line": 95,
                    "end_column": 19
                  },
                  "type": "IntLiteral",
                  "value": "0"
                },
                "end": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 95,
                    "start_column": 22,
                    "end_line": 95,
                    "end_column": 23
                  },
                  "type": "Identifier",
                  "name": "i"
                },
                "inclusive": true
              },
              "body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 96,
                    "start_column": 13,
                    "end_line": 100,
                    "end_column": 14
                  },
                  "type": "ForStatement",
                  "target": [
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 96,
                        "start_column": 17,
                        "end_line": 96,
                        "end_column": 18
                      },
                      "type": "Identifier",
                      "name": "k"
                    }
                  ],
                  "iterable": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 96,
                      "start_column": 23,
                      "end_line": 96,
                      "end_column": 34
                    },
                    "type": "RangeExpression",
                    "start": {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 96,
                        "start_column": 23,
                        "end_line": 96,
                        "end_column": 28
                      },
                      "type": "BinaryOp",
                      "left": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 96,
                          "start_column": 23,
                          "end_line": 96,
                          "end_column": 24
                        },
                        "type": "Identifier",
                        "name": "j"
                      },
                      "operator": "+",
                      "right": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 96,
                          "start_column": 27,
                          "end_line": 96,
                          "end_column": 28
                        },
                        "type": "IntLiteral",
                        "value": "1"
                      }
                    },
                    "end": {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 96,
                        "start_column": 32,
                        "end_line": 96,
                        "end_column": 34
                      },
                      "type": "IntLiteral",
                      "value": "20"
                    },
                    "inclusive": false
                  },
                  "body": [
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 97,
                        "start_column": 17,
                        "end_line": 98,
                        "end_column": 26
                      },
                      "type": "IfStatement",
                      "condition": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 97,
                          "start_column": 22,
                          "end_line": 97,
                          "end_column": 62
                        },
                        "type": "BinaryOp",
                        "left": {
                          "span": {
                            "file_path": "test/test_parser_edge_cases.sl",
                            "start_line": 97,
                            "start_column": 22,
                            "end_line": 97,
                            "end_column": 41
                          },
                          "type": "BinaryOp",
                          "left": {
                            "span": {
                              "file_path": "test/test_parser_edge_cases.sl",
                              "start_line": 97,
                              "start_column": 22,
                              "end_line": 97,
                              "end_column": 36
                            },
                            "type": "BinaryOp",
                            "left": {
                              "span": {
                                "file_path": "test/test_parser_edge_cases.sl",
                                "start_line": 97,
                                "start_column": 22,
                                "end_line": 97,
                                "end_column": 31
                              },
                              "type": "BinaryOp",
                              "left": {
                                "span": {
                                  "file_path": "test/test_parser_edge_cases.sl",
                                  "start_line": 97,
                                  "start_column": 22,
                                  "end_line": 97,
                                  "end_column": 27
                                },
                                "type": "BinaryOp",
                                "left": {
                                  "span": {
                                    "file_path": "test/test_parser_edge_cases.sl",
                                    "start_line": 97,
                                    "start_column": 22,
                                    "end_line": 97,
                                    "end_column": 23
                                  },
                                  "type": "Identifier",
                                  "name": "i"
                                },
                                "operator": "*",
                                "right": {
                                  "span": {
                                    "file_path": "test/test_parser_edge_cases.sl",
                                    "start_line": 97,
                                    "start_column": 26,
                                    "end_line": 97,
                                    "end_column": 27
                                  },
                                  "type": "Identifier",
                                  "name": "j"
                                }
                              },
                              "operator": "+",
                              "right": {
                                "span": {
                                  "file_path": "test/test_parser_edge_cases.sl",
                                  "start_line": 97,
                                  "start_column": 30,
                                  "end_line": 97,
                                  "end_column": 31
                                },
                                "type": "Identifier",
                                "name": "k"
                              }
                            },
                            "operator": "%",
                            "right": {
                              "span": {
                                "file_path": "test/test_parser_edge_cases.sl",
                                "start_line": 97,
                                "start_column": 35,
                                "end_line": 97,
                                "end_column": 36
                              },
                              "type": "IntLiteral",
                              "value": "7"
                            }
                          },
                          "operator": "==",
                          "right": {
                            "span": {
                              "file_path": "test/test_parser_edge_cases.sl",
                              "start_line": 97,
                              "start_column": 40,
                              "end_line": 97,
                              "end_column": 41
                            },
                            "type": "IntLiteral",
                            "value": "0"
                          }
                        },
                        "operator": "and",
                        "right": {
                          "span": {
                            "file_path": "test/test_parser_edge_cases.sl",
                            "start_line": 97,
                            "start_column": 48,
                            "end_line": 97,
                            "end_column": 62
                          },
                          "type": "BinaryOp",
                          "left": {
                            "span": {
                              "file_path": "test/test_parser_edge_cases.sl",
                              "start_line": 97,
                              "start_column": 48,
                              "end_line": 97,
                              "end_column": 57
                            },
                            "type": "BinaryOp",
                            "left": {
                              "span": {
                                "file_path": "test/test_parser_edge_cases.sl",
                                "start_line": 97,
                                "start_column": 48,
                                "end_line": 97,
                                "end_column": 53
                              },
                              "type": "BinaryOp",
                              "left": {
                                "span": {
                                  "file_path": "test/test_parser_edge_cases.sl",
                                  "start_line": 97,
                                  "start_column": 48,
                                  "end_line": 97,
                                  "end_column": 49
                                },
                                "type": "Identifier",
                                "name": "i"
                              },
                              "operator": "+",
                              "right": {
                                "span": {
                                  "file_path": "test/test_parser_edge_cases.sl",
                                  "start_line": 97,
                                  "start_column": 52,
                                  "end_line": 97,
                                  "end_column": 53
                                },
                                "type": "Identifier",
                                "name": "j"
                              }
                            },
                            "operator": "+",
                            "right": {
                              "span": {
                                "file_path": "test/test_parser_edge_cases.sl",
                                "start_line": 97,
                                "start_column": 56,
                                "end_line": 97,
                                "end_column": 57
                              },
                              "type": "Identifier",
                              "name": "k"
                            }
                          },
                          "operator": ">",
                          "right": {
                            "span": {
                              "file_path": "test/test_parser_edge_cases.sl",
                              "start_line": 97,
                              "start_column": 60,
                              "end_line": 97,
                              "end_column": 62
                            },
                            "type": "IntLiteral",
                            "value": "15"
                          }
                        }
                      },
                      "then_body": [
                        {
                          "span": {
                            "file_path": "test/test_parser_edge_cases.sl",
                            "start_line": 98,
                            "start_column": 21,
                            "end_line": 98,
                            "end_column": 26
                          },
                          "type": "BreakStatement"
                        }
                      ],
                      "elif_branches": [],
                      "else_body": null
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 104,
            "start_column": 5,
            "end_line": 104,
            "end_column": 15
          },
          "type": "VarDeclaration",
          "name": "x",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 104,
              "start_column": 8,
              "end_line": 104,
              "end_column": 11
            },
            "type": "I32"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 104,
              "start_column": 14,
              "end_line": 104,
              "end_column": 15
            },
            "type": "IntLiteral",
            "value": "0"
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 105,
            "start_column": 5,
            "end_line": 105,
            "end_column": 17
          },
          "type": "VarDeclaration",
          "name": "y",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 105,
              "start_column": 8,
              "end_line": 105,
              "end_column": 11
            },
            "type": "I32"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 105,
              "start_column": 14,
              "end_line": 105,
              "end_column": 17
            },
            "type": "IntLiteral",
            "value": "100"
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 107,
            "start_column": 5,
            "end_line": 119,
            "end_column": 6
          },
          "type": "WhileStatement",
          "condition": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 107,
              "start_column": 12,
              "end_line": 107,
              "end_column": 54
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 107,
                "start_column": 12,
                "end_line": 107,
                "end_column": 31
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 107,
                  "start_column": 12,
                  "end_line": 107,
                  "end_column": 18
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 107,
                    "start_column": 12,
                    "end_line": 107,
                    "end_column": 13
                  },
                  "type": "Identifier",
                  "name": "x"
                },
                "operator": "<",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 107,
                    "start_column": 16,
                    "end_line": 107,
                    "end_column": 18
                  },
                  "type": "IntLiteral",
                  "value": "50"
                }
              },
              "operator": "and",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 107,
                  "start_column": 25,
                  "end_line": 107,
                  "end_column": 31
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 107,
                    "start_column": 25,
                    "end_line": 107,
                    "end_column": 26
                  },
                  "type": "Identifier",
                  "name": "y"
                },
                "operator": ">",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 107,
                    "start_column": 29,
                    "end_line": 107,
                    "end_column": 31
                  },
                  "type": "IntLiteral",
                  "value": "25"
                }
              }
            },
            "operator": "and",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 107,
                "start_column": 39,
                "end_line": 107,
                "end_column": 54
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 107,
                  "start_column": 39,
                  "end_line": 107,
                  "end_column": 49
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 107,
                    "start_column": 39,
                    "end_line": 107,
                    "end_column": 44
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 107,
                      "start_column": 39,
                      "end_line": 107,
                      "end_column": 40
                    },
                    "type": "Identifier",
                    "name": "x"
                  },
                  "operator": "+",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 107,
                      "start_column": 43,
                      "end_line": 107,
                      "end_column": 44
                    },
                    "type": "Identifier",
                    "name": "y"
                  }
                },
                "operator": "%",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 107,
                    "start_column": 48,
                    "end_line": 107,
                    "end_column": 49
                  },
                  "type": "IntLiteral",
                  "value": "3"
                }
              },
              "operator": "!=",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 107,
                  "start_column": 53,
                  "end_line": 107,
                  "end_column": 54
                },
                "type": "IntLiteral",
                "value": "0"
              }
            }
          },
          "body": [
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 108,
                "start_column": 9,
                "end_line": 110,
                "end_column": 21
              },
              "type": "IfStatement",
              "condition": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 108,
                  "start_column": 13,
                  "end_line": 108,
                  "end_column": 23
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 108,
                    "start_column": 13,
                    "end_line": 108,
                    "end_column": 18
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 108,
                      "start_column": 13,
                      "end_line": 108,
                      "end_column": 14
                    },
                    "type": "Identifier",
                    "name": "x"
                  },
                  "operator": "%",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 108,
                      "start_column": 17,
                      "end_line": 108,
                      "end_column": 18
                    },
                    "type": "IntLiteral",
                    "value": "2"
                  }
                },
                "operator": "==",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 108,
                    "start_column": 22,
                    "end_line": 108,
                    "end_column": 23
                  },
                  "type": "IntLiteral",
                  "value": "0"
                }
              },
              "then_body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 109,
                    "start_column": 13,
                    "end_line": 109,
                    "end_column": 22
                  },
                  "type": "Assignment",
                  "target": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 109,
                      "start_column": 13,
                      "end_line": 109,
                      "end_column": 14
                    },
                    "type": "Identifier",
                    "name": "x"
                  },
                  "value": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 109,
                      "start_column": 17,
                      "end_line": 109,
                      "end_column": 22
                    },
                    "type": "BinaryOp",
                    "left": {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 109,
                        "start_column": 17,
                        "end_line": 109,
                        "end_column": 18
                      },
                      "type": "Identifier",
                      "name": "x"
                    },
                    "operator": "+",
                    "right": {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 109,
                        "start_column": 21,
                        "end_line": 109,
                        "end_column": 22
                      },
                      "type": "IntLiteral",
                      "value": "1"
                    }
                  }
                },
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 110,
                    "start_column": 13,
                    "end_line": 110,
                    "end_column": 21
                  },
                  "type": "ContinueStatement"
                }
              ],
              "elif_branches": [],
              "else_body": null
            },
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 113,
                "start_column": 9,
                "end_line": 113,
                "end_column": 18
              },
              "type": "Assignment",
              "target": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 113,
                  "start_column": 9,
                  "end_line": 113,
                  "end_column": 10
                },
                "type": "Identifier",
                "name": "x"
              },
              "value": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 113,
                  "start_column": 13,
                  "end_line": 113,
                  "end_column": 18
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 113,
                    "start_column": 13,
                    "end_line": 113,
                    "end_column": 14
                  },
                  "type": "Identifier",
                  "name": "x"
                },
                "operator": "+",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 113,
                    "start_column": 17,
                    "end_line": 113,
                    "end_column": 18
                  },
                  "type": "IntLiteral",
                  "value": "2"
                }
              }
            },
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 114,
                "start_column": 9,
                "end_line": 114,
                "end_column": 18
              },
              "type": "Assignment",
              "target": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 114,
                  "start_column": 9,
                  "end_line": 114,
                  "end_column": 10
                },
                "type": "Identifier",
                "name": "y"
              },
              "value": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 114,
                  "start_column": 13,
                  "end_line": 114,
                  "end_column": 18
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 114,
                    "start_column": 13,
                    "end_line": 114,
                    "end_column": 14
                  },
                  "type": "Identifier",
                  "name": "y"
                },
                "operator": "-",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 114,
                    "start_column": 17,
                    "end_line": 114,
                    "end_column": 18
                  },
                  "type": "IntLiteral",
                  "value": "1"
                }
              }
            },
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 116,
                "start_column": 9,
                "end_line": 117,
                "end_column": 18
              },
              "type": "IfStatement",
              "condition": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 116,
                  "start_column": 13,
                  "end_line": 116,
                  "end_column": 18
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 116,
                    "start_column": 13,
                    "end_line": 116,
                    "end_column": 14
                  },
                  "type": "Identifier",
                  "name": "x"
                },
                "operator": ">",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 116,
                    "start_column": 17,
                    "end_line": 116,
                    "end_column": 18
                  },
                  "type": "Identifier",
                  "name": "y"
                }
              },
              "then_body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 117,
                    "start_column": 13,
                    "end_line": 117,
                    "end_column": 18
                  },
                  "type": "BreakStatement"
                }
              ],
              "elif_branches": [],
              "else_body": null
            }
          ]
        }
      ]
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 122,
        "start_column": 1,
        "end_line": 166,
        "end_column": 2
      },
      "type": "FunctionDef",
      "name": "test_pattern_matching",
      "params": [],
      "return_type": null,
      "body": [
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 123,
            "start_column": 5,
            "end_line": 123,
            "end_column": 56
          },
          "type": "VarDeclaration",
          "name": "result",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 123,
              "start_column": 13,
              "end_line": 123,
              "end_column": 28
            },
            "type": "CustomType",
            "name": "ParseResult",
            "type_args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 123,
                  "start_column": 25,
                  "end_line": 123,
                  "end_column": 28
                },
                "type": "I32"
              }
            ]
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 123,
              "start_column": 31,
              "end_line": 123,
              "end_column": 56
            },
            "type": "UnionLiteral",
            "variant": "success",
            "value": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 123,
                "start_column": 40,
                "end_line": 123,
                "end_column": 53
              },
              "type": "ListLiteral",
              "elements": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 123,
                    "start_column": 40,
                    "end_line": 123,
                    "end_column": 42
                  },
                  "type": "IntLiteral",
                  "value": "42"
                },
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 123,
                    "start_column": 44,
                    "end_line": 123,
                    "end_column": 53
                  },
                  "type": "StringLiteral",
                  "value": "remaining"
                }
              ]
            }
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 125,
            "start_column": 5,
            "end_line": 143,
            "end_column": 6
          },
          "type": "MatchStatement",
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 125,
              "start_column": 11,
              "end_line": 125,
              "end_column": 17
            },
            "type": "Identifier",
            "name": "result"
          },
          "cases": [
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 126,
                "start_column": 9,
                "end_line": 127,
                "end_column": 55
              },
              "type": "MatchCase",
              "pattern": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 126,
                  "start_column": 14,
                  "end_line": 126,
                  "end_column": 40
                },
                "type": "UnionPattern",
                "variant": "success",
                "pattern": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 126,
                    "start_column": 23,
                    "end_line": 126,
                    "end_column": 39
                  },
                  "type": "StructPattern",
                  "name": "",
                  "fields": [
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 126,
                        "start_column": 23,
                        "end_line": 126,
                        "end_column": 28
                      },
                      "type": "StructPatternField",
                      "name": null,
                      "pattern": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 126,
                          "start_column": 23,
                          "end_line": 126,
                          "end_column": 28
                        },
                        "type": "IdentifierPattern",
                        "name": "value"
                      }
                    },
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 126,
                        "start_column": 30,
                        "end_line": 126,
                        "end_column": 39
                      },
                      "type": "StructPatternField",
                      "name": null,
                      "pattern": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 126,
                          "start_column": 30,
                          "end_line": 126,
                          "end_column": 39
                        },
                        "type": "IdentifierPattern",
                        "name": "remaining"
                      }
                    }
                  ]
                }
              },
              "guard": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 126,
                  "start_column": 45,
                  "end_line": 126,
                  "end_column": 79
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 126,
                    "start_column": 45,
                    "end_line": 126,
                    "end_column": 54
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 126,
                      "start_column": 45,
                      "end_line": 126,
                      "end_column": 50
                    },
                    "type": "Identifier",
                    "name": "value"
                  },
                  "operator": ">",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 126,
                      "start_column": 53,
                      "end_line": 126,
                      "end_column": 54
                    },
                    "type": "IntLiteral",
                    "value": "0"
                  }
                },
                "operator": "and",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 126,
                    "start_column": 61,
                    "end_line": 126,
                    "end_column": 79
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 126,
                      "start_column": 61,
                      "end_line": 126,
                      "end_column": 74
                    },
                    "type": "FunctionCall",
                    "name": "len",
                    "args": [
                      {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 126,
                          "start_column": 65,
                          "end_line": 126,
                          "end_column": 74
                        },
                        "type": "Identifier",
                        "name": "remaining"
                      }
                    ]
                  },
                  "operator": ">",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 126,
                      "start_column": 78,
                      "end_line": 126,
                      "end_column": 79
                    },
                    "type": "IntLiteral",
                    "value": "0"
                  }
                }
              },
              "body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 127,
                    "start_column": 13,
                    "end_line": 127,
                    "end_column": 55
                  },
                  "type": "NativeBlock",
                  "content": " printf(\"Successful parse: %d\\n\", value); "
                }
              ]
            },
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 129,
                "start_column": 9,
                "end_line": 130,
                "end_column": 50
              },
              "type": "MatchCase",
              "pattern": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 129,
                  "start_column": 14,
                  "end_line": 129,
                  "end_column": 40
                },
                "type": "UnionPattern",
                "variant": "success",
                "pattern": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 129,
                    "start_column": 23,
                    "end_line": 129,
                    "end_column": 39
                  },
                  "type": "StructPattern",
                  "name": "",
                  "fields": [
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 129,
                        "start_column": 23,
                        "end_line": 129,
                        "end_column": 28
                      },
                      "type": "StructPatternField",
                      "name": null,
                      "pattern": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 129,
                          "start_column": 23,
                          "end_line": 129,
                          "end_column": 28
                        },
                        "type": "IdentifierPattern",
                        "name": "value"
                      }
                    },
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 129,
                        "start_column": 30,
                        "end_line": 129,
                        "end_column": 39
                      },
                      "type": "StructPatternField",
                      "name": null,
                      "pattern": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 129,
                          "start_column": 30,
                          "end_line": 129,
                          "end_column": 39
                        },
                        "type": "IdentifierPattern",
                        "name": "remaining"
                      }
                    }
                  ]
                }
              },
              "guard": null,
              "body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 130,
                    "start_column": 13,
                    "end_line": 130,
                    "end_column": 50
                  },
                  "type": "NativeBlock",
                  "content": " printf(\"Small value: %d\\n\", value); "
                }
              ]
            },
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 132,
                "start_column": 9,
                "end_line": 133,
                "end_column": 54
              },
              "type": "MatchCase",
              "pattern": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 132,
                  "start_column": 14,
                  "end_line": 132,
                  "end_column": 40
                },
                "type": "UnionPattern",
                "variant": "success",
                "pattern": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 132,
                    "start_column": 23,
                    "end_line": 132,
                    "end_column": 39
                  },
                  "type": "StructPattern",
                  "name": "",
                  "fields": [
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 132,
                        "start_column": 23,
                        "end_line": 132,
                        "end_column": 28
                      },
                      "type": "StructPatternField",
                      "name": null,
                      "pattern": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 132,
                          "start_column": 23,
                          "end_line": 132,
                          "end_column": 28
                        },
                        "type": "IdentifierPattern",
                        "name": "value"
                      }
                    },
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 132,
                        "start_column": 30,
                        "end_line": 132,
                        "end_column": 39
                      },
                      "type": "StructPatternField",
                      "name": null,
                      "pattern": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 132,
                          "start_column": 30,
                          "end_line": 132,
                          "end_column": 39
                        },
                        "type": "IdentifierPattern",
                        "name": "remaining"
                      }
                    }
                  ]
                }
              },
              "guard": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 132,
                  "start_column": 44,
                  "end_line": 132,
                  "end_column": 53
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 132,
                    "start_column": 44,
                    "end_line": 132,
                    "end_column": 49
                  },
                  "type": "Identifier",
                  "name": "value"
                },
                "operator": "<",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 132,
                    "start_column": 52,
                    "end_line": 132,
                    "end_column": 53
                  },
                  "type": "IntLiteral",
                  "value": "0"
                }
              },
              "body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 133,
                    "start_column": 13,
                    "end_line": 133,
                    "end_column": 54
                  },
                  "type": "NativeBlock",
                  "content": " printf(\"Negative value not allowed\\n\"); "
                }
              ]
            },
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 135,
                "start_column": 9,
                "end_line": 136,
                "end_column": 75
              },
              "type": "MatchCase",
              "pattern": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 135,
                  "start_column": 14,
                  "end_line": 135,
                  "end_column": 39
                },
                "type": "UnionPattern",
                "variant": "error",
                "pattern": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 135,
                    "start_column": 21,
                    "end_line": 135,
                    "end_column": 38
                  },
                  "type": "StructPattern",
                  "name": "",
                  "fields": [
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 135,
                        "start_column": 21,
                        "end_line": 135,
                        "end_column": 28
                      },
                      "type": "StructPatternField",
                      "name": null,
                      "pattern": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 135,
                          "start_column": 21,
                          "end_line": 135,
                          "end_column": 28
                        },
                        "type": "IdentifierPattern",
                        "name": "message"
                      }
                    },
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 135,
                        "start_column": 30,
                        "end_line": 135,
                        "end_column": 38
                      },
                      "type": "StructPatternField",
                      "name": null,
                      "pattern": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 135,
                          "start_column": 30,
                          "end_line": 135,
                          "end_column": 38
                        },
                        "type": "IdentifierPattern",
                        "name": "position"
                      }
                    }
                  ]
                }
              },
              "guard": null,
              "body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 136,
                    "start_column": 13,
                    "end_line": 136,
                    "end_column": 75
                  },
                  "type": "NativeBlock",
                  "content": " printf(\"Parse failed at %zu: %s\\n\", position, message.data); "
                }
              ]
            },
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 138,
                "start_column": 9,
                "end_line": 139,
                "end_column": 46
              },
              "type": "MatchCase",
              "pattern": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 138,
                  "start_column": 14,
                  "end_line": 138,
                  "end_column": 39
                },
                "type": "UnionPattern",
                "variant": "error",
                "pattern": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 138,
                    "start_column": 21,
                    "end_line": 138,
                    "end_column": 38
                  },
                  "type": "StructPattern",
                  "name": "",
                  "fields": [
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 138,
                        "start_column": 21,
                        "end_line": 138,
                        "end_column": 28
                      },
                      "type": "StructPatternField",
                      "name": null,
                      "pattern": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 138,
                          "start_column": 21,
                          "end_line": 138,
                          "end_column": 28
                        },
                        "type": "IdentifierPattern",
                        "name": "message"
                      }
                    },
                    {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 138,
                        "start_column": 30,
                        "end_line": 138,
                        "end_column": 38
                      },
                      "type": "StructPatternField",
                      "name": null,
                      "pattern": {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 138,
                          "start_column": 30,
                          "end_line": 138,
                          "end_column": 38
                        },
                        "type": "IdentifierPattern",
                        "name": "position"
                      }
                    }
                  ]
                }
              },
              "guard": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 138,
                  "start_column": 43,
                  "end_line": 138,
                  "end_column": 57
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 138,
                    "start_column": 43,
                    "end_line": 138,
                    "end_column": 51
                  },
                  "type": "Identifier",
                  "name": "position"
                },
                "operator": ">",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 138,
                    "start_column": 54,
                    "end_line": 138,
                    "end_column": 57
                  },
                  "type": "IntLiteral",
                  "value": "100"
                }
              },
              "body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 139,
                    "start_column": 13,
                    "end_line": 139,
                    "end_column": 46
                  },
                  "type": "NativeBlock",
                  "content": " printf(\"Error far in input\\n\"); "
                }
              ]
            },
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 141,
                "start_column": 9,
                "end_line": 142,
                "end_column": 38
              },
              "type": "MatchCase",
              "pattern": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 141,
                  "start_column": 14,
                  "end_line": 141,
                  "end_column": 15
                },
                "type": "WildcardPattern"
              },
              "guard": null,
              "body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 142,
                    "start_column": 13,
                    "end_line": 142,
                    "end_column": 38
                  },
                  "type": "NativeBlock",
                  "content": " printf(\"Other case\\n\"); "
                }
              ]
            }
          ]
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 145,
            "start_column": 5,
            "end_line": 145,
            "end_column": 64
          },
          "type": "VarDeclaration",
          "name": "matrix",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 145,
              "start_column": 13,
              "end_line": 145,
              "end_column": 27
            },
            "type": "CustomType",
            "name": "List",
            "type_args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 145,
                  "start_column": 19,
                  "end_line": 145,
                  "end_column": 27
                },
                "type": "CustomType",
                "name": "List",
                "type_args": [
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 145,
                      "start_column": 24,
                      "end_line": 145,
                      "end_column": 27
                    },
                    "type": "I32"
                  }
                ]
              }
            ]
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 145,
              "start_column": 31,
              "end_line": 145,
              "end_column": 64
            },
            "type": "ListLiteral",
            "elements": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 145,
                  "start_column": 32,
                  "end_line": 145,
                  "end_column": 41
                },
                "type": "ListLiteral",
                "elements": [
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 145,
                      "start_column": 33,
                      "end_line": 145,
                      "end_column": 34
                    },
                    "type": "IntLiteral",
                    "value": "1"
                  },
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 145,
                      "start_column": 36,
                      "end_line": 145,
                      "end_column": 37
                    },
                    "type": "IntLiteral",
                    "value": "2"
                  },
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 145,
                      "start_column": 39,
                      "end_line": 145,
                      "end_column": 40
                    },
                    "type": "IntLiteral",
                    "value": "3"
                  }
                ]
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 145,
                  "start_column": 43,
                  "end_line": 145,
                  "end_column": 52
                },
                "type": "ListLiteral",
                "elements": [
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 145,
                      "start_column": 44,
                      "end_line": 145,
                      "end_column": 45
                    },
                    "type": "IntLiteral",
                    "value": "4"
                  },
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 145,
                      "start_column": 47,
                      "end_line": 145,
                      "end_column": 48
                    },
                    "type": "IntLiteral",
                    "value": "5"
                  },
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 145,
                      "start_column": 50,
                      "end_line": 145,
                      "end_column": 51
                    },
                    "type": "IntLiteral",
                    "value": "6"
                  }
                ]
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 145,
                  "start_column": 54,
                  "end_line": 145,
                  "end_column": 63
                },
                "type": "ListLiteral",
                "elements": [
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 145,
                      "start_column": 55,
                      "end_line": 145,
                      "end_column": 56
                    },
                    "type": "IntLiteral",
                    "value": "7"
                  },
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 145,
                      "start_column": 58,
                      "end_line": 145,
                      "end_column": 59
                    },
                    "type": "IntLiteral",
                    "value": "8"
                  },
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 145,
                      "start_column": 61,
                      "end_line": 145,
                      "end_column": 62
                    },
                    "type": "IntLiteral",
                    "value": "9"
                  }
                ]
              }
            ]
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 147,
            "start_column": 5,
            "end_line": 165,
            "end_column": 6
          },
          "type": "MatchStatement",
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 147,
              "start_column": 11,
              "end_line": 147,
              "end_column": 17
            },
            "type": "Identifier",
            "name": "matrix"
          },
          "cases": [
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 148,
                "start_column": 9,
                "end_line": 149,
                "end_column": 40
              },
              "type": "MatchCase",
              "pattern": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 148,
                  "start_column": 14,
                  "end_line": 148,
                  "end_column": 16
                },
                "type": "ListPattern",
                "prefix_patterns": [],
                "rest_name": null,
                "suffix_patterns": []
              },
              "guard": null,
              "body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 149,
                    "start_column": 13,
                    "end_line": 149,
                    "end_column": 40
                  },
                  "type": "NativeBlock",
                  "content": " printf(\"Empty matrix\\n\"); "
                }
              ]
            },
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 151,
                "start_column": 9,
                "end_line": 152,
                "end_column": 50
              },
              "type": "MatchCase",
              "pattern": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 151,
                  "start_column": 14,
                  "end_line": 151,
                  "end_column": 24
                },
                "type": "ListPattern",
                "prefix_patterns": [
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 151,
                      "start_column": 15,
                      "end_line": 151,
                      "end_column": 23
                    },
                    "type": "ListPattern",
                    "prefix_patterns": [
                      {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 151,
                          "start_column": 16,
                          "end_line": 151,
                          "end_column": 22
                        },
                        "type": "IdentifierPattern",
                        "name": "single"
                      }
                    ],
                    "rest_name": null,
                    "suffix_patterns": []
                  }
                ],
                "rest_name": null,
                "suffix_patterns": []
              },
              "guard": null,
              "body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 152,
                    "start_column": 13,
                    "end_line": 152,
                    "end_column": 50
                  },
                  "type": "NativeBlock",
                  "content": " printf(\"1x1 matrix: %d\\n\", single); "
                }
              ]
            },
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 154,
                "start_column": 9,
                "end_line": 155,
                "end_column": 49
              },
              "type": "MatchCase",
              "pattern": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 154,
                  "start_column": 14,
                  "end_line": 154,
                  "end_column": 30
                },
                "type": "ListPattern",
                "prefix_patterns": [
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 154,
                      "start_column": 15,
                      "end_line": 154,
                      "end_column": 21
                    },
                    "type": "ListPattern",
                    "prefix_patterns": [
                      {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 154,
                          "start_column": 16,
                          "end_line": 154,
                          "end_column": 17
                        },
                        "type": "IdentifierPattern",
                        "name": "a"
                      },
                      {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 154,
                          "start_column": 19,
                          "end_line": 154,
                          "end_column": 20
                        },
                        "type": "IdentifierPattern",
                        "name": "b"
                      }
                    ],
                    "rest_name": null,
                    "suffix_patterns": []
                  },
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 154,
                      "start_column": 23,
                      "end_line": 154,
                      "end_column": 29
                    },
                    "type": "ListPattern",
                    "prefix_patterns": [
                      {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 154,
                          "start_column": 24,
                          "end_line": 154,
                          "end_column": 25
                        },
                        "type": "IdentifierPattern",
                        "name": "c"
                      },
                      {
                        "span": {
                          "file_path": "test/test_parser_edge_cases.sl",
                          "start_line": 154,
                          "start_column": 27,
                          "end_line": 154,
                          "end_column": 28
                        },
                        "type": "IdentifierPattern",
                        "name": "d"
                      }
                    ],
                    "rest_name": null,
                    "suffix_patterns": []
                  }
                ],
                "rest_name": null,
                "suffix_patterns": []
              },
              "guard": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 154,
                  "start_column": 35,
                  "end_line": 154,
                  "end_column": 54
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 154,
                    "start_column": 35,
                    "end_line": 154,
                    "end_column": 48
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 154,
                      "start_column": 35,
                      "end_line": 154,
                      "end_column": 40
                    },
                    "type": "BinaryOp",
                    "left": {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 154,
                        "start_column": 35,
                        "end_line": 154,
                        "end_column": 36
                      },
                      "type": "Identifier",
                      "name": "a"
                    },
                    "operator": "*",
                    "right": {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 154,
                        "start_column": 39,
                        "end_line": 154,
                        "end_column": 40
                      },
                      "type": "Identifier",
                      "name": "d"
                    }
                  },
                  "operator": "-",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 154,
                      "start_column": 43,
                      "end_line": 154,
                      "end_column": 48
                    },
                    "type": "BinaryOp",
                    "left": {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 154,
                        "start_column": 43,
                        "end_line": 154,
                        "end_column": 44
                      },
                      "type": "Identifier",
                      "name": "b"
                    },
                    "operator": "*",
                    "right": {
                      "span": {
                        "file_path": "test/test_parser_edge_cases.sl",
                        "start_line": 154,
                        "start_column": 47,
                        "end_line": 154,
                        "end_column": 48
                      },
                      "type": "Identifier",
                      "name": "c"
                    }
                  }
                },
                "operator": "!=",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 154,
                    "start_column": 53,
                    "end_line": 154,
                    "end_column": 54
                  },
                  "type": "IntLiteral",
                  "value": "0"
                }
              },
              "body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 155,
                    "start_column": 13,
                    "end_line": 155,
                    "end_column": 49
                  },
                  "type": "NativeBlock",
                  "content": " printf(\"Invertible 2x2 matrix\\n\"); "
                }
              ]
            },
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 157,
                "start_column": 9,
                "end_line": 158,
                "end_column": 53
              },
              "type": "MatchCase",
              "pattern": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 157,
                  "start_column": 14,
                  "end_line": 157,
                  "end_column": 39
                },
                "type": "ListPattern",
                "prefix_patterns": [
                  {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 157,
                      "start_column": 15,
                      "end_line": 157,
                      "end_column": 24
                    },
                    "type": "IdentifierPattern",
                    "name": "first_row"
                  }
                ],
                "rest_name": "other_rows",
                "suffix_patterns": []
              },
              "guard": null,
              "body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 158,
                    "start_column": 13,
                    "end_line": 158,
                    "end_column": 53
                  },
                  "type": "NativeBlock",
                  "content": " printf(\"Matrix with multiple rows\\n\"); "
                }
              ]
            },
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 160,
                "start_column": 9,
                "end_line": 161,
                "end_column": 48
              },
              "type": "MatchCase",
              "pattern": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 160,
                  "start_column": 14,
                  "end_line": 160,
                  "end_column": 18
                },
                "type": "IdentifierPattern",
                "name": "rows"
              },
              "guard": null,
              "body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 161,
                    "start_column": 13,
                    "end_line": 161,
                    "end_column": 48
                  },
                  "type": "NativeBlock",
                  "content": " printf(\"Other matrix pattern\\n\"); "
                }
              ]
            },
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 163,
                "start_column": 9,
                "end_line": 164,
                "end_column": 44
              },
              "type": "MatchCase",
              "pattern": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 163,
                  "start_column": 14,
                  "end_line": 163,
                  "end_column": 15
                },
                "type": "WildcardPattern"
              },
              "guard": null,
              "body": [
                {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 164,
                    "start_column": 13,
                    "end_line": 164,
                    "end_column": 44
                  },
                  "type": "NativeBlock",
                  "content": " printf(\"Irregular matrix\\n\"); "
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 168,
        "start_column": 1,
        "end_line": 180,
        "end_column": 2
      },
      "type": "FunctionDef",
      "name": "test_parenthesized_expressions",
      "params": [],
      "return_type": null,
      "body": [
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 169,
            "start_column": 5,
            "end_line": 169,
            "end_column": 16
          },
          "type": "VarDeclaration",
          "name": "x",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 169,
              "start_column": 8,
              "end_line": 169,
              "end_column": 11
            },
            "type": "I32"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 169,
              "start_column": 14,
              "end_line": 169,
              "end_column": 16
            },
            "type": "IntLiteral",
            "value": "10"
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 170,
            "start_column": 5,
            "end_line": 170,
            "end_column": 16
          },
          "type": "VarDeclaration",
          "name": "y",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 170,
              "start_column": 8,
              "end_line": 170,
              "end_column": 11
            },
            "type": "I32"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 170,
              "start_column": 14,
              "end_line": 170,
              "end_column": 16
            },
            "type": "IntLiteral",
            "value": "20"
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 171,
            "start_column": 5,
            "end_line": 171,
            "end_column": 18
          },
          "type": "VarDeclaration",
          "name": "z",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 171,
              "start_column": 8,
              "end_line": 171,
              "end_column": 11
            },
            "type": "F64"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 171,
              "start_column": 14,
              "end_line": 171,
              "end_column": 18
            },
            "type": "FloatLiteral",
            "value": "3.14"
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 173,
            "start_column": 5,
            "end_line": 173,
            "end_column": 60
          },
          "type": "VarDeclaration",
          "name": "complex1",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 173,
              "start_column": 15,
              "end_line": 173,
              "end_column": 18
            },
            "type": "I32"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 173,
              "start_column": 23,
              "end_line": 173,
              "end_column": 60
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 173,
                "start_column": 23,
                "end_line": 173,
                "end_column": 38
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 173,
                  "start_column": 23,
                  "end_line": 173,
                  "end_column": 28
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 173,
                    "start_column": 23,
                    "end_line": 173,
                    "end_column": 24
                  },
                  "type": "Identifier",
                  "name": "x"
                },
                "operator": "+",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 173,
                    "start_column": 27,
                    "end_line": 173,
                    "end_column": 28
                  },
                  "type": "Identifier",
                  "name": "y"
                }
              },
              "operator": "*",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 173,
                  "start_column": 33,
                  "end_line": 173,
                  "end_column": 38
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 173,
                    "start_column": 33,
                    "end_line": 173,
                    "end_column": 34
                  },
                  "type": "Identifier",
                  "name": "x"
                },
                "operator": "-",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 173,
                    "start_column": 37,
                    "end_line": 173,
                    "end_column": 38
                  },
                  "type": "Identifier",
                  "name": "y"
                }
              }
            },
            "operator": "/",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 173,
                "start_column": 45,
                "end_line": 173,
                "end_column": 60
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 173,
                  "start_column": 45,
                  "end_line": 173,
                  "end_column": 50
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 173,
                    "start_column": 45,
                    "end_line": 173,
                    "end_column": 46
                  },
                  "type": "Identifier",
                  "name": "x"
                },
                "operator": "*",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 173,
                    "start_column": 49,
                    "end_line": 173,
                    "end_column": 50
                  },
                  "type": "IntLiteral",
                  "value": "2"
                }
              },
              "operator": "+",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 173,
                  "start_column": 55,
                  "end_line": 173,
                  "end_column": 60
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 173,
                    "start_column": 55,
                    "end_line": 173,
                    "end_column": 56
                  },
                  "type": "Identifier",
                  "name": "y"
                },
                "operator": "/",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 173,
                    "start_column": 59,
                    "end_line": 173,
                    "end_column": 60
                  },
                  "type": "IntLiteral",
                  "value": "3"
                }
              }
            }
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 174,
            "start_column": 5,
            "end_line": 174,
            "end_column": 56
          },
          "type": "VarDeclaration",
          "name": "complex2",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 174,
              "start_column": 15,
              "end_line": 174,
              "end_column": 18
            },
            "type": "F64"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 174,
              "start_column": 23,
              "end_line": 174,
              "end_column": 56
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 174,
                "start_column": 23,
                "end_line": 174,
                "end_column": 36
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 174,
                  "start_column": 23,
                  "end_line": 174,
                  "end_column": 28
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 174,
                    "start_column": 23,
                    "end_line": 174,
                    "end_column": 24
                  },
                  "type": "Identifier",
                  "name": "z"
                },
                "operator": "*",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 174,
                    "start_column": 27,
                    "end_line": 174,
                    "end_column": 28
                  },
                  "type": "Identifier",
                  "name": "z"
                }
              },
              "operator": "+",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 174,
                  "start_column": 32,
                  "end_line": 174,
                  "end_column": 36
                },
                "type": "FloatLiteral",
                "value": "10.0"
              }
            },
            "operator": "-",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 174,
                "start_column": 41,
                "end_line": 174,
                "end_column": 56
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 174,
                  "start_column": 41,
                  "end_line": 174,
                  "end_column": 45
                },
                "type": "FloatLiteral",
                "value": "20.0"
              },
              "operator": "/",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 174,
                  "start_column": 49,
                  "end_line": 174,
                  "end_column": 56
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 174,
                    "start_column": 49,
                    "end_line": 174,
                    "end_column": 50
                  },
                  "type": "Identifier",
                  "name": "z"
                },
                "operator": "+",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 174,
                    "start_column": 53,
                    "end_line": 174,
                    "end_column": 56
                  },
                  "type": "FloatLiteral",
                  "value": "1.0"
                }
              }
            }
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 175,
            "start_column": 5,
            "end_line": 175,
            "end_column": 74
          },
          "type": "VarDeclaration",
          "name": "complex3",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 175,
              "start_column": 15,
              "end_line": 175,
              "end_column": 19
            },
            "type": "Bool"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 175,
              "start_column": 24,
              "end_line": 175,
              "end_column": 74
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 175,
                "start_column": 24,
                "end_line": 175,
                "end_column": 42
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 175,
                  "start_column": 24,
                  "end_line": 175,
                  "end_column": 29
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 175,
                    "start_column": 24,
                    "end_line": 175,
                    "end_column": 25
                  },
                  "type": "Identifier",
                  "name": "x"
                },
                "operator": ">",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 175,
                    "start_column": 28,
                    "end_line": 175,
                    "end_column": 29
                  },
                  "type": "IntLiteral",
                  "value": "5"
                }
              },
              "operator": "and",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 175,
                  "start_column": 36,
                  "end_line": 175,
                  "end_column": 42
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 175,
                    "start_column": 36,
                    "end_line": 175,
                    "end_column": 37
                  },
                  "type": "Identifier",
                  "name": "y"
                },
                "operator": "<",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 175,
                    "start_column": 40,
                    "end_line": 175,
                    "end_column": 42
                  },
                  "type": "IntLiteral",
                  "value": "30"
                }
              }
            },
            "operator": "or",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 175,
                "start_column": 50,
                "end_line": 175,
                "end_column": 74
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 175,
                  "start_column": 50,
                  "end_line": 175,
                  "end_column": 57
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 175,
                    "start_column": 50,
                    "end_line": 175,
                    "end_column": 51
                  },
                  "type": "Identifier",
                  "name": "z"
                },
                "operator": ">",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 175,
                    "start_column": 54,
                    "end_line": 175,
                    "end_column": 57
                  },
                  "type": "FloatLiteral",
                  "value": "3.0"
                }
              },
              "operator": "and",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 175,
                  "start_column": 63,
                  "end_line": 175,
                  "end_column": 74
                },
                "type": "UnaryOp",
                "operator": "not",
                "operand": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 175,
                    "start_column": 68,
                    "end_line": 175,
                    "end_column": 74
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 175,
                      "start_column": 68,
                      "end_line": 175,
                      "end_column": 69
                    },
                    "type": "Identifier",
                    "name": "x"
                  },
                  "operator": "==",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 175,
                      "start_column": 73,
                      "end_line": 175,
                      "end_column": 74
                    },
                    "type": "Identifier",
                    "name": "y"
                  }
                }
              }
            }
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 177,
            "start_column": 5,
            "end_line": 177,
            "end_column": 73
          },
          "type": "VarDeclaration",
          "name": "deeply_nested",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 177,
              "start_column": 20,
              "end_line": 177,
              "end_column": 23
            },
            "type": "I32"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 177,
              "start_column": 30,
              "end_line": 177,
              "end_column": 73
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 177,
                "start_column": 30,
                "end_line": 177,
                "end_column": 56
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 177,
                  "start_column": 30,
                  "end_line": 177,
                  "end_column": 40
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 177,
                    "start_column": 30,
                    "end_line": 177,
                    "end_column": 35
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 177,
                      "start_column": 30,
                      "end_line": 177,
                      "end_column": 31
                    },
                    "type": "Identifier",
                    "name": "x"
                  },
                  "operator": "+",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 177,
                      "start_column": 34,
                      "end_line": 177,
                      "end_column": 35
                    },
                    "type": "IntLiteral",
                    "value": "1"
                  }
                },
                "operator": "*",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 177,
                    "start_column": 39,
                    "end_line": 177,
                    "end_column": 40
                  },
                  "type": "IntLiteral",
                  "value": "2"
                }
              },
              "operator": "-",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 177,
                  "start_column": 46,
                  "end_line": 177,
                  "end_column": 56
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 177,
                    "start_column": 46,
                    "end_line": 177,
                    "end_column": 51
                  },
                  "type": "BinaryOp",
                  "left": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 177,
                      "start_column": 46,
                      "end_line": 177,
                      "end_column": 47
                    },
                    "type": "Identifier",
                    "name": "y"
                  },
                  "operator": "-",
                  "right": {
                    "span": {
                      "file_path": "test/test_parser_edge_cases.sl",
                      "start_line": 177,
                      "start_column": 50,
                      "end_line": 177,
                      "end_column": 51
                    },
                    "type": "IntLiteral",
                    "value": "5"
                  }
                },
                "operator": "/",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 177,
                    "start_column": 55,
                    "end_line": 177,
                    "end_column": 56
                  },
                  "type": "IntLiteral",
                  "value": "2"
                }
              }
            },
            "operator": "+",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 177,
                "start_column": 63,
                "end_line": 177,
                "end_column": 73
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 177,
                  "start_column": 63,
                  "end_line": 177,
                  "end_column": 68
                },
                "type": "BinaryOp",
                "left": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 177,
                    "start_column": 63,
                    "end_line": 177,
                    "end_column": 64
                  },
                  "type": "IntLiteral",
                  "value": "3"
                },
                "operator": "%",
                "right": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 177,
                    "start_column": 67,
                    "end_line": 177,
                    "end_column": 68
                  },
                  "type": "IntLiteral",
                  "value": "3"
                }
              },
              "operator": "*",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 177,
                  "start_column": 72,
                  "end_line": 177,
                  "end_column": 73
                },
                "type": "IntLiteral",
                "value": "4"
              }
            }
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 179,
            "start_column": 5,
            "end_line": 179,
            "end_column": 36
          },
          "type": "VarDeclaration",
          "name": "simple_expr",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 179,
              "start_column": 18,
              "end_line": 179,
              "end_column": 21
            },
            "type": "I32"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 179,
              "start_column": 26,
              "end_line": 179,
              "end_column": 36
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 179,
                "start_column": 26,
                "end_line": 179,
                "end_column": 31
              },
              "type": "BinaryOp",
              "left": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 179,
                  "start_column": 26,
                  "end_line": 179,
                  "end_column": 27
                },
                "type": "Identifier",
                "name": "x"
              },
              "operator": "+",
              "right": {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 179,
                  "start_column": 30,
                  "end_line": 179,
                  "end_column": 31
                },
                "type": "Identifier",
                "name": "y"
              }
            },
            "operator": "*",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 179,
                "start_column": 35,
                "end_line": 179,
                "end_column": 36
              },
              "type": "IntLiteral",
              "value": "2"
            }
          }
        }
      ]
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 182,
        "start_column": 1,
        "end_line": 182,
        "end_column": 26
      },
      "type": "VarDeclaration",
      "name": "global_var",
      "type_annotation": {
        "span": {
          "file_path": "test/test_parser_edge_cases.sl",
          "start_line": 182,
          "start_column": 13,
          "end_line": 182,
          "end_column": 21
        },
        "type": "CustomType",
        "name": "List",
        "type_args": [
          {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 182,
              "start_column": 18,
              "end_line": 182,
              "end_column": 21
            },
            "type": "Str"
          }
        ]
      },
      "value": {
        "span": {
          "file_path": "test/test_parser_edge_cases.sl",
          "start_line": 182,
          "start_column": 24,
          "end_line": 182,
          "end_column": 26
        },
        "type": "ListLiteral",
        "elements": []
      }
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 184,
        "start_column": 1,
        "end_line": 213,
        "end_column": 2
      },
      "type": "FunctionDef",
      "name": "test_global_variables",
      "params": [],
      "return_type": null,
      "body": [
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 185,
            "start_column": 5,
            "end_line": 185,
            "end_column": 33
          },
          "type": "ExpressionStatement",
          "expression": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 185,
              "start_column": 5,
              "end_line": 185,
              "end_column": 33
            },
            "type": "MethodCall",
            "object": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 185,
                "start_column": 5,
                "end_line": 185,
                "end_column": 15
              },
              "type": "Identifier",
              "name": "global_var"
            },
            "method": "append",
            "args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 185,
                  "start_column": 23,
                  "end_line": 185,
                  "end_column": 33
                },
                "type": "StringLiteral",
                "value": "\n\t stringz"
              }
            ]
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 187,
            "start_column": 5,
            "end_line": 187,
            "end_column": 33
          },
          "type": "VarDeclaration",
          "name": "PROGRAM_VERSION",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 187,
              "start_column": 22,
              "end_line": 187,
              "end_column": 25
            },
            "type": "Str"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 187,
              "start_column": 28,
              "end_line": 187,
              "end_column": 33
            },
            "type": "StringLiteral",
            "value": "1.2.3"
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 188,
            "start_column": 5,
            "end_line": 188,
            "end_column": 29
          },
          "type": "VarDeclaration",
          "name": "DEBUG_MODE",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 188,
              "start_column": 17,
              "end_line": 188,
              "end_column": 21
            },
            "type": "Bool"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 188,
              "start_column": 24,
              "end_line": 188,
              "end_column": 29
            },
            "type": "BoolLiteral",
            "value": false
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 189,
            "start_column": 5,
            "end_line": 189,
            "end_column": 34
          },
          "type": "VarDeclaration",
          "name": "MAX_BUFFER_SIZE",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 189,
              "start_column": 22,
              "end_line": 189,
              "end_column": 27
            },
            "type": "Usize"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 189,
              "start_column": 30,
              "end_line": 189,
              "end_column": 34
            },
            "type": "IntLiteral",
            "value": "8192"
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 190,
            "start_column": 5,
            "end_line": 190,
            "end_column": 32
          },
          "type": "VarDeclaration",
          "name": "DEFAULT_TIMEOUT",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 190,
              "start_column": 22,
              "end_line": 190,
              "end_column": 25
            },
            "type": "F64"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 190,
              "start_column": 28,
              "end_line": 190,
              "end_column": 32
            },
            "type": "FloatLiteral",
            "value": "30.0"
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 191,
            "start_column": 5,
            "end_line": 191,
            "end_column": 28
          },
          "type": "VarDeclaration",
          "name": "GLOBAL_COUNTER",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 191,
              "start_column": 21,
              "end_line": 191,
              "end_column": 24
            },
            "type": "I32"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 191,
              "start_column": 27,
              "end_line": 191,
              "end_column": 28
            },
            "type": "IntLiteral",
            "value": "0"
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 192,
            "start_column": 5,
            "end_line": 196,
            "end_column": 6
          },
          "type": "VarDeclaration",
          "name": "SHARED_CONFIG",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 192,
              "start_column": 20,
              "end_line": 192,
              "end_column": 31
            },
            "type": "CustomType",
            "name": "Map",
            "type_args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 192,
                  "start_column": 24,
                  "end_line": 192,
                  "end_column": 27
                },
                "type": "Str"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 192,
                  "start_column": 28,
                  "end_line": 192,
                  "end_column": 31
                },
                "type": "Str"
              }
            ]
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 192,
              "start_column": 34,
              "end_line": 196,
              "end_column": 6
            },
            "type": "MapLiteral",
            "pairs": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 193,
                  "start_column": 9,
                  "end_line": 193,
                  "end_column": 26
                },
                "type": "MapPair",
                "key": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 193,
                    "start_column": 9,
                    "end_line": 193,
                    "end_column": 13
                  },
                  "type": "StringLiteral",
                  "value": "host"
                },
                "value": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 193,
                    "start_column": 17,
                    "end_line": 193,
                    "end_column": 26
                  },
                  "type": "StringLiteral",
                  "value": "localhost"
                }
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 194,
                  "start_column": 9,
                  "end_line": 194,
                  "end_column": 21
                },
                "type": "MapPair",
                "key": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 194,
                    "start_column": 9,
                    "end_line": 194,
                    "end_column": 13
                  },
                  "type": "StringLiteral",
                  "value": "port"
                },
                "value": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 194,
                    "start_column": 17,
                    "end_line": 194,
                    "end_column": 21
                  },
                  "type": "StringLiteral",
                  "value": "8080"
                }
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 195,
                  "start_column": 9,
                  "end_line": 195,
                  "end_column": 26
                },
                "type": "MapPair",
                "key": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 195,
                    "start_column": 9,
                    "end_line": 195,
                    "end_column": 17
                  },
                  "type": "StringLiteral",
                  "value": "protocol"
                },
                "value": {
                  "span": {
                    "file_path": "test/test_parser_edge_cases.sl",
                    "start_line": 195,
                    "start_column": 21,
                    "end_line": 195,
                    "end_column": 26
                  },
                  "type": "StringLiteral",
                  "value": "https"
                }
              }
            ]
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 197,
            "start_column": 5,
            "end_line": 197,
            "end_column": 85
          },
          "type": "VarDeclaration",
          "name": "ERROR_CODES",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 197,
              "start_column": 18,
              "end_line": 197,
              "end_column": 26
            },
            "type": "CustomType",
            "name": "List",
            "type_args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 197,
                  "start_column": 23,
                  "end_line": 197,
                  "end_column": 26
                },
                "type": "Str"
              }
            ]
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 197,
              "start_column": 29,
              "end_line": 197,
              "end_column": 85
            },
            "type": "ListLiteral",
            "elements": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 197,
                  "start_column": 30,
                  "end_line": 197,
                  "end_column": 37
                },
                "type": "StringLiteral",
                "value": "SUCCESS"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 197,
                  "start_column": 41,
                  "end_line": 197,
                  "end_column": 54
                },
                "type": "StringLiteral",
                "value": "INVALID_INPUT"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 197,
                  "start_column": 58,
                  "end_line": 197,
                  "end_column": 71
                },
                "type": "StringLiteral",
                "value": "NETWORK_ERROR"
              },
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 197,
                  "start_column": 75,
                  "end_line": 197,
                  "end_column": 82
                },
                "type": "StringLiteral",
                "value": "TIMEOUT"
              }
            ]
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 199,
            "start_column": 5,
            "end_line": 199,
            "end_column": 40
          },
          "type": "Assignment",
          "target": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 199,
              "start_column": 5,
              "end_line": 199,
              "end_column": 19
            },
            "type": "Identifier",
            "name": "GLOBAL_COUNTER"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 199,
              "start_column": 22,
              "end_line": 199,
              "end_column": 40
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 199,
                "start_column": 22,
                "end_line": 199,
                "end_column": 36
              },
              "type": "Identifier",
              "name": "GLOBAL_COUNTER"
            },
            "operator": "+",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 199,
                "start_column": 39,
                "end_line": 199,
                "end_column": 40
              },
              "type": "IntLiteral",
              "value": "1"
            }
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 201,
            "start_column": 5,
            "end_line": 201,
            "end_column": 54
          },
          "type": "VarDeclaration",
          "name": "version_parts",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 201,
              "start_column": 20,
              "end_line": 201,
              "end_column": 28
            },
            "type": "CustomType",
            "name": "List",
            "type_args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 201,
                  "start_column": 25,
                  "end_line": 201,
                  "end_column": 28
                },
                "type": "Str"
              }
            ]
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 201,
              "start_column": 31,
              "end_line": 201,
              "end_column": 54
            },
            "type": "MethodCall",
            "object": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 201,
                "start_column": 31,
                "end_line": 201,
                "end_column": 46
              },
              "type": "Identifier",
              "name": "PROGRAM_VERSION"
            },
            "method": "split",
            "args": [
              {
                "span": {
                  "file_path": "test/test_parser_edge_cases.sl",
                  "start_line": 201,
                  "start_column": 53,
                  "end_line": 201,
                  "end_column": 54
                },
                "type": "StringLiteral",
                "value": "."
              }
            ]
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 203,
            "start_column": 5,
            "end_line": 204,
            "end_column": 91
          },
          "type": "IfStatement",
          "condition": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 203,
              "start_column": 8,
              "end_line": 203,
              "end_column": 18
            },
            "type": "Identifier",
            "name": "DEBUG_MODE"
          },
          "then_body": [
            {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 204,
                "start_column": 9,
                "end_line": 204,
                "end_column": 91
              },
              "type": "NativeBlock",
              "content": "\n            printf(\"Debug mode enabled, counter: %d\\n\", GLOBAL_COUNTER);\n        "
            }
          ],
          "elif_branches": [],
          "else_body": null
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 209,
            "start_column": 5,
            "end_line": 209,
            "end_column": 38
          },
          "type": "VarDeclaration",
          "name": "host",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 209,
              "start_column": 11,
              "end_line": 209,
              "end_column": 14
            },
            "type": "Str"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 209,
              "start_column": 17,
              "end_line": 209,
              "end_column": 38
            },
            "type": "IndexAccess",
            "object": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 209,
                "start_column": 17,
                "end_line": 209,
                "end_column": 30
              },
              "type": "Identifier",
              "name": "SHARED_CONFIG"
            },
            "index": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 209,
                "start_column": 31,
                "end_line": 209,
                "end_column": 35
              },
              "type": "StringLiteral",
              "value": "host"
            }
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 210,
            "start_column": 5,
            "end_line": 210,
            "end_column": 41
          },
          "type": "VarDeclaration",
          "name": "timeout",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 210,
              "start_column": 14,
              "end_line": 210,
              "end_column": 17
            },
            "type": "F64"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 210,
              "start_column": 20,
              "end_line": 210,
              "end_column": 41
            },
            "type": "BinaryOp",
            "left": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 210,
                "start_column": 20,
                "end_line": 210,
                "end_column": 35
              },
              "type": "Identifier",
              "name": "DEFAULT_TIMEOUT"
            },
            "operator": "*",
            "right": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 210,
                "start_column": 38,
                "end_line": 210,
                "end_column": 41
              },
              "type": "FloatLiteral",
              "value": "2.0"
            }
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 212,
            "start_column": 5,
            "end_line": 212,
            "end_column": 36
          },
          "type": "VarDeclaration",
          "name": "error_msg",
          "type_annotation": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 212,
              "start_column": 16,
              "end_line": 212,
              "end_column": 19
            },
            "type": "Str"
          },
          "value": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 212,
              "start_column": 22,
              "end_line": 212,
              "end_column": 36
            },
            "type": "IndexAccess",
            "object": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 212,
                "start_column": 22,
                "end_line": 212,
                "end_column": 33
              },
              "type": "Identifier",
              "name": "ERROR_CODES"
            },
            "index": {
              "span": {
                "file_path": "test/test_parser_edge_cases.sl",
                "start_line": 212,
                "start_column": 34,
                "end_line": 212,
                "end_column": 35
              },
              "type": "IntLiteral",
              "value": "1"
            }
          }
        }
      ]
    },
    {
      "span": {
        "file_path": "test/test_parser_edge_cases.sl",
        "start_line": 215,
        "start_column": 1,
        "end_line": 230,
        "end_column": 2
      },
      "type": "FunctionDef",
      "name": "main",
      "params": [],
      "return_type": null,
      "body": [
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 216,
            "start_column": 5,
            "end_line": 216,
            "end_column": 77
          },
          "type": "NativeBlock",
          "content": "\n        printf(\"Testing edge cases and complex expressions...\\n\");\n    "
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 220,
            "start_column": 5,
            "end_line": 220,
            "end_column": 29
          },
          "type": "ExpressionStatement",
          "expression": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 220,
              "start_column": 5,
              "end_line": 220,
              "end_column": 29
            },
            "type": "FunctionCall",
            "name": "test_complex_expressions",
            "args": []
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 221,
            "start_column": 5,
            "end_line": 221,
            "end_column": 28
          },
          "type": "ExpressionStatement",
          "expression": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 221,
              "start_column": 5,
              "end_line": 221,
              "end_column": 28
            },
            "type": "FunctionCall",
            "name": "test_edge_case_literals",
            "args": []
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 222,
            "start_column": 5,
            "end_line": 222,
            "end_column": 30
          },
          "type": "ExpressionStatement",
          "expression": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 222,
              "start_column": 5,
              "end_line": 222,
              "end_column": 30
            },
            "type": "FunctionCall",
            "name": "test_complex_control_flow",
            "args": []
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 223,
            "start_column": 5,
            "end_line": 223,
            "end_column": 26
          },
          "type": "ExpressionStatement",
          "expression": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 223,
              "start_column": 5,
              "end_line": 223,
              "end_column": 26
            },
            "type": "FunctionCall",
            "name": "test_global_variables",
            "args": []
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 224,
            "start_column": 5,
            "end_line": 224,
            "end_column": 26
          },
          "type": "ExpressionStatement",
          "expression": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 224,
              "start_column": 5,
              "end_line": 224,
              "end_column": 26
            },
            "type": "FunctionCall",
            "name": "test_pattern_matching",
            "args": []
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 225,
            "start_column": 5,
            "end_line": 225,
            "end_column": 35
          },
          "type": "ExpressionStatement",
          "expression": {
            "span": {
              "file_path": "test/test_parser_edge_cases.sl",
              "start_line": 225,
              "start_column": 5,
              "end_line": 225,
              "end_column": 35
            },
            "type": "FunctionCall",
            "name": "test_parenthesized_expressions",
            "args": []
          }
        },
        {
          "span": {
            "file_path": "test/test_parser_edge_cases.sl",
            "start_line": 227,
            "start_column": 5,
            "end_line": 227,
            "end_column": 60
          },
          "type": "NativeBlock",
          "content": "\n        printf(\"Edge case testing completed!\\n\");\n    "
        }
      ]
    }
  ]
}